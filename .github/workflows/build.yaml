name: Flutter CI

on:
  push:
    branches:
      - main
      - master
  pull_request:
      branches:
        - main
        - master

env:
  JAVA_VERSION: "17.0.1"
  FLUTTER_VERSION: "2.2.3"
  FLUTTER_CHANNEL: "stable"
  PROPERTIES_PATH: "./android/key.properties"

jobs:
  flutter_test:
    name: Run Flutter assigned build appbundle
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1
        with:
          java-version: ${{env.JAVA_VERSION}}
      - uses: subosito/flutter-action@v1
        with:
          channel: ${{env.FLUTTER_CHANNEL}}
          flutter-version: ${{env.FLUTTER_VERSION}}

      # Creating the key.properties file
      - run: |
          echo keyPassword=\${{ secrets.KEY_STORE }} > ${{env.PROPERTIES_PATH}}
          echo storePassword=\${{ secrets.KEY_PASSWORD }} >> ${{env.PROPERTIES_PATH}}
          echo keyAlias=\${{ secrets.KEY_ALIAS }} >> ${{env.PROPERTIES_PATH}}

  - run: echo "${{ secrets.KEYSTORE2 }}" | base64 --decode > android/app/key.jks

      # Get dependencies and make assigned appbundle
      - run: |
          flutter pub get
          flutter build appbundle
      - name: Upload artefato
          uses: actions/upload-artifact@v2
          with:
            name: appbundle
            path: build/app/outputs/bundle/release
#name: Flutter CI
#
## This workflow is triggered on pushes to the repository.
#
#on:
#  push:
#    branches:
#      - main
#
#    # on: push    # Default will running for every branch.
#
#jobs:
#
#  build:
#    # This job will run on ubuntu virtual machine
#    runs-on: ubuntu-latest
#    steps:
#
#      # Setup Java environment in order to build the Android app.
#      - uses: actions/checkout@v1
#      - uses: actions/setup-java@v1
#        with:
#          java-version: '17.0.1'
#      - uses: actions/cache@v2
#        with:
#          path: |
#            ~/.gradle/caches
#            ~/.gradle/wrapper
#          key: ${{ runner.os }}-${{ hashFiles('*/.gradle*') }}-${{ hashFiles('*/gradle/wrapper/gradle-wrapper.properties') }}-${{ hashFiles('**/buildSrc/**/.kt') }}
#
#      - name: Copy  gradle properties file
#        run: cp -r ./android/* .
#
#      # Setup the flutter environment.
#      - uses: subosito/flutter-action@v1
#        with:
#          channel: 'stable'
#          flutter-version: '2.5.3' # you can also specify exact version of flutter
#
#      # Get flutter dependencies.
#      - run: flutter pub get
#
#      # Check for any formatting issues in the code.
#      #- run: flutter format --set-exit-if-changed .
#
#      # Statically analyze the Dart code for any errors.
#     # - run: flutter analyze .
#
#      # Run widget tests for our flutter project.
#      #  - run: flutter test
#
#      # Build apk.
#      - uses: gradle/gradle-build-action@v2
#        with:
#          arguments: build
#      - run: flutter build apk --debug --split-per-abi
#
#      # Upload generated apk to the artifacts.
#      - uses: actions/upload-artifact@v1
#        with:
#          name: release-apk
#          path: build/app/outputs/apk/release/app-release.apk